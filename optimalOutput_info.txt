-------------------
TIMINGS TABLE
-------------------

OK | No | Time      | Best      | Remarks
---------------------------------------------------------------------------------------
 X | 01 | 16.263    | 16.263    | OPTIMAL (multiple points - done by hand)
 X | 02 | 16.194    | 16.194    | OPTIMAL (guaranteed - two points)
 Y | 03 | 11.715    | 11.715    | BEST (lindworm) (probably optimal)
 X | 04 | 15.818    | 15.818    | OPTIMAL (guaranteed - two points)
 X | 05 | 80.479    | 80.479    | OPTIMAL (guaranteed - two points)
 X | 06 | 166.625   | 166.625   | OPTIMAL
 X | 07 | 272.513   | 272.513   | OPTIMAL (guaranteed - two points)
 * | 08 | 512.866   | 527.866   | BEST!!!!!!! (1 -> 187)
 * | 09 | 346.797   | 349.485   | BEST!!!!!!! (1 -> 8, 2 -> 301)
 * | 10 | 396.455   | 406.496   | BEST!!!!!!! (2 -> 382)
 ! | 11 | 15.065    | 14.993    | CLOSE (lindworm) (1 -> 156)
 Y | 12 | 17.114    | 17.114    | BEST (lindworm)
 ! | 13 | 15.774    | 15.754    | CLOSE (lindworm) (1 -> 211)
 ! | 14 | 24.622    | 24.565    | SECOND BEST (qilin) (3 -> 59)
 * | 15 | 17.653    | 17.704    | BEST!!!!!!! (i = 100 -> 216, then 246)
 ! | 16 | 17.862    | 17.718    | (lindworm) (3 -> 17)
 * | 17 | 16.541    | 18.4      | BEST!!!!!!! (id = 166 -> 138)
 * | 18 | 18.092    | 18.361    | BEST!!!!!!! (id = 43 -> 47 then 120)
 * | 19 | 17.594    | 19.529    | BEST!!!!!!! (id = 0 -> 106, id = 199 -> 157) (next best by rusalka)
 ! | 20 | 27.03     | 26.749    | CLOSE (lindworm) (id = 147 -> 186)
 * | 21 | 96.365    | 97.188    | BEST!!!!!!! (id = 227 -> 191)
 * | 22 | 231.801   | 231.996   | BEST!!!!!!! (id = 221 -> 161)
 ! | 23 | 204.189   | 199.271   | not good enough.... (id = 99 -> 25)
 Y | 24 | 279.416   | 279.191   | BEST (lindworm)
 * | 25 | 304.875   | 349.571   | BEST!!!!!!! (id = 0 -> 150)
 Y | 26 | 113.107   | 112.67    | (lindworm)
 Y | 27 | 103.198   | 103.198   | BEST (lindworm)
 Y | 28 | 111.567   | 111.567   | BEST (lindworm)
 * | 29 | 102.024   | 103.219   | BEST!!!!!!! (id = 0 -> 137 -> 109)
 Y | 30 | 77.054    | 77.054    | BEST (lindworm)


-------------------
NOTES
-------------------
An optimal solution is possible for just two robots.

Optimal solution achieved:
2 (16.194)
4 (15.818)
5 (80.479)
7 (272.513)

Optimal solution possible but not achieved:
3 (optimal: 11.715) (current: 15.289)
6 (unknown optimal - two points) (current: intersecting obstacle)

Good timings:
11, 18

Optimal solution not likely possible:


Others:


--------------------------------------
SINGLE-INSTANCE OPTIMISATIONS
--------------------------------------
--8--------------
if (x == 1) {
    robots.get(nextRobotToReachTarget).closest = 187;
}

--9--------------
if (x == 1) {
    robots.get(nextRobotToReachTarget).closest = 8;
}
if (x == 2) {
    robots.get(nextRobotToReachTarget).closest = 301;
}

--15-------------
// ---- Manual Optimisation Counter ----
int manualOptimisation = 0;

// ...Do robot selection etc...
// Update distance for all awake robots

// ==== Manual Optimisation Section ====
if (nextRobotToReachTarget == 100) {
    switch (manualOptimisation++) {
        case 0:
            robots.get(nextRobotToReachTarget).closest = 216;
            break;
        case 1:
            robots.get(nextRobotToReachTarget).closest = 246;
            break;
    }
}

--18-------------
if (nextRobotToReachTarget == 43) {
    System.out.println("robot encountered");
    switch (manualOptimizationList[0]++) {
        case 0:
            robots.get(nextRobotToReachTarget).closest = 47;
            System.out.println("MADE CHANGE");
            break;
        case 1:
            robots.get(nextRobotToReachTarget).closest = 120;
            System.out.println("MADE CHANGE 2");
            break;
    }
}

--------------------------------------
OPTIMISATION THOUGHTS
--------------------------------------
- Robots that start in the middle should aim to spread out from the center in a radial manner.
    - e.g. 15
- Robots that start in the corner should aim to approach the middle.
    - Unless approaching the middle causes it to encounter an obstacle (e.g. 23), at which point it should move away from the obstacle.